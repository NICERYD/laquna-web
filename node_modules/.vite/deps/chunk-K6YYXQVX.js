import {
  SUPPORTS_INTERSECTION
} from "./chunk-JPRW4QWJ.js";
import {
  onBeforeUnmount,
  watch
} from "./chunk-OXGMLYT6.js";
import {
  ref
} from "./chunk-QVWTMDFM.js";

// node_modules/vuetify/lib/composables/intersectionObserver.mjs
function useIntersectionObserver(callback, options) {
  const intersectionRef = ref();
  const isIntersecting = ref(false);
  if (SUPPORTS_INTERSECTION) {
    const observer = new IntersectionObserver((entries) => {
      callback == null ? void 0 : callback(entries, observer);
      isIntersecting.value = !!entries.find((entry) => entry.isIntersecting);
    }, options);
    onBeforeUnmount(() => {
      observer.disconnect();
    });
    watch(intersectionRef, (newValue, oldValue) => {
      if (oldValue) {
        observer.unobserve(oldValue);
        isIntersecting.value = false;
      }
      if (newValue)
        observer.observe(newValue);
    }, {
      flush: "post"
    });
  }
  return {
    intersectionRef,
    isIntersecting
  };
}

export {
  useIntersectionObserver
};
//# sourceMappingURL=chunk-K6YYXQVX.js.map
